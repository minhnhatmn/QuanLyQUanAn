#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QlQuanAn")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAN(BAN instance);
    partial void UpdateBAN(BAN instance);
    partial void DeleteBAN(BAN instance);
    partial void InsertXUATKHO(XUATKHO instance);
    partial void UpdateXUATKHO(XUATKHO instance);
    partial void DeleteXUATKHO(XUATKHO instance);
    partial void InsertCHITIETDATBAN(CHITIETDATBAN instance);
    partial void UpdateCHITIETDATBAN(CHITIETDATBAN instance);
    partial void DeleteCHITIETDATBAN(CHITIETDATBAN instance);
    partial void InsertCHITIETGOIMON(CHITIETGOIMON instance);
    partial void UpdateCHITIETGOIMON(CHITIETGOIMON instance);
    partial void DeleteCHITIETGOIMON(CHITIETGOIMON instance);
    partial void InsertDATBAN(DATBAN instance);
    partial void UpdateDATBAN(DATBAN instance);
    partial void DeleteDATBAN(DATBAN instance);
    partial void InsertGOIMON(GOIMON instance);
    partial void UpdateGOIMON(GOIMON instance);
    partial void DeleteGOIMON(GOIMON instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertMONAN(MONAN instance);
    partial void UpdateMONAN(MONAN instance);
    partial void DeleteMONAN(MONAN instance);
    partial void InsertNGUYENLIEU(NGUYENLIEU instance);
    partial void UpdateNGUYENLIEU(NGUYENLIEU instance);
    partial void DeleteNGUYENLIEU(NGUYENLIEU instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHAPKHO(NHAPKHO instance);
    partial void UpdateNHAPKHO(NHAPKHO instance);
    partial void DeleteNHAPKHO(NHAPKHO instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DAL.Properties.Settings.Default.QlQuanAnConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAN> BANs
		{
			get
			{
				return this.GetTable<BAN>();
			}
		}
		
		public System.Data.Linq.Table<XUATKHO> XUATKHOs
		{
			get
			{
				return this.GetTable<XUATKHO>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDATBAN> CHITIETDATBANs
		{
			get
			{
				return this.GetTable<CHITIETDATBAN>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETGOIMON> CHITIETGOIMONs
		{
			get
			{
				return this.GetTable<CHITIETGOIMON>();
			}
		}
		
		public System.Data.Linq.Table<DATBAN> DATBANs
		{
			get
			{
				return this.GetTable<DATBAN>();
			}
		}
		
		public System.Data.Linq.Table<GOIMON> GOIMONs
		{
			get
			{
				return this.GetTable<GOIMON>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<MONAN> MONANs
		{
			get
			{
				return this.GetTable<MONAN>();
			}
		}
		
		public System.Data.Linq.Table<NGUYENLIEU> NGUYENLIEUs
		{
			get
			{
				return this.GetTable<NGUYENLIEU>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this.GetTable<NHAPKHO>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NHANVIEN_XOA")]
		public int NHANVIEN_XOA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANV", DbType="NChar(10)")] string mANV)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mANV);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BAN_DELETE")]
		public int BAN_DELETE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MABAN", DbType="VarChar(10)")] string mABAN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mABAN);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BAN_INSERT")]
		public int BAN_INSERT([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MABAN", DbType="VarChar(10)")] string mABAN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LOAIBAN", DbType="NVarChar(50)")] string lOAIBAN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mABAN, lOAIBAN);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BAN_UPDATE")]
		public int BAN_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MABAN", DbType="VarChar(10)")] string mABAN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LOAIBAN", DbType="NVarChar(50)")] string lOAIBAN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TINHTRANG", DbType="NVarChar(50)")] string tINHTRANG)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mABAN, lOAIBAN, tINHTRANG);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BAN_XOA")]
		public int BAN_XOA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MABAN", DbType="NChar(10)")] string mABAN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mABAN);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.KHO_NHAP")]
		public int KHO_NHAP([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANL", DbType="NChar(10)")] string mANL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SOLUONG", DbType="Int")] System.Nullable<int> sOLUONG, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NHACUNGCAP", DbType="NVarChar(500)")] string nHACUNGCAP, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NGAYNHAP", DbType="Date")] System.Nullable<System.DateTime> nGAYNHAP, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NGAYHETHAN", DbType="Int")] System.Nullable<int> nGAYHETHAN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANV", DbType="NChar(10)")] string mANV)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mANL, sOLUONG, nHACUNGCAP, nGAYNHAP, nGAYHETHAN, mANV);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.KHO_XUAT")]
		public int KHO_XUAT([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANL", DbType="NChar(10)")] string mANL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SOLUONG", DbType="Int")] System.Nullable<int> sOLUONG, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NGAYXUAT", DbType="Date")] System.Nullable<System.DateTime> nGAYXUAT, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANV", DbType="NChar(10)")] string mANV)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mANL, sOLUONG, nGAYXUAT, mANV);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.loadNL")]
		public ISingleResult<loadNLResult> loadNL()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<loadNLResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MONAN_XOA")]
		public int MONAN_XOA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MAMONAN", DbType="NChar(10)")] string mAMONAN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mAMONAN);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NGUYENLIEU_SUA")]
		public int NGUYENLIEU_SUA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANL", DbType="NChar(10)")] string mANL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TENNL", DbType="NVarChar(500)")] string tENNL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SOLUONG", DbType="Int")] System.Nullable<int> sOLUONG, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DVT", DbType="NVarChar(50)")] string dVT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mANL, tENNL, sOLUONG, dVT);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NGUYENLIEU_XOA")]
		public int NGUYENLIEU_XOA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MANL", DbType="NChar(10)")] string mANL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mANL);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAN")]
	public partial class BAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABAN;
		
		private string _LOAIBAN;
		
		private string _TINHTRANG;
		
		private EntitySet<DATBAN> _DATBANs;
		
		private EntitySet<GOIMON> _GOIMONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABANChanging(string value);
    partial void OnMABANChanged();
    partial void OnLOAIBANChanging(string value);
    partial void OnLOAIBANChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public BAN()
		{
			this._DATBANs = new EntitySet<DATBAN>(new Action<DATBAN>(this.attach_DATBANs), new Action<DATBAN>(this.detach_DATBANs));
			this._GOIMONs = new EntitySet<GOIMON>(new Action<GOIMON>(this.attach_GOIMONs), new Action<GOIMON>(this.detach_GOIMONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABAN
		{
			get
			{
				return this._MABAN;
			}
			set
			{
				if ((this._MABAN != value))
				{
					this.OnMABANChanging(value);
					this.SendPropertyChanging();
					this._MABAN = value;
					this.SendPropertyChanged("MABAN");
					this.OnMABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIBAN", DbType="NVarChar(500)")]
		public string LOAIBAN
		{
			get
			{
				return this._LOAIBAN;
			}
			set
			{
				if ((this._LOAIBAN != value))
				{
					this.OnLOAIBANChanging(value);
					this.SendPropertyChanging();
					this._LOAIBAN = value;
					this.SendPropertyChanged("LOAIBAN");
					this.OnLOAIBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(50)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_DATBAN", Storage="_DATBANs", ThisKey="MABAN", OtherKey="MABAN")]
		public EntitySet<DATBAN> DATBANs
		{
			get
			{
				return this._DATBANs;
			}
			set
			{
				this._DATBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_GOIMON", Storage="_GOIMONs", ThisKey="MABAN", OtherKey="MABAN")]
		public EntitySet<GOIMON> GOIMONs
		{
			get
			{
				return this._GOIMONs;
			}
			set
			{
				this._GOIMONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATBANs(DATBAN entity)
		{
			this.SendPropertyChanging();
			entity.BAN = this;
		}
		
		private void detach_DATBANs(DATBAN entity)
		{
			this.SendPropertyChanging();
			entity.BAN = null;
		}
		
		private void attach_GOIMONs(GOIMON entity)
		{
			this.SendPropertyChanging();
			entity.BAN = this;
		}
		
		private void detach_GOIMONs(GOIMON entity)
		{
			this.SendPropertyChanging();
			entity.BAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XUATKHO")]
	public partial class XUATKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MANL;
		
		private int _SOLUONG;
		
		private System.Nullable<System.DateTime> _NGAYXUAT;
		
		private string _MANV;
		
		private EntityRef<NGUYENLIEU> _NGUYENLIEU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMANLChanging(string value);
    partial void OnMANLChanged();
    partial void OnSOLUONGChanging(int value);
    partial void OnSOLUONGChanged();
    partial void OnNGAYXUATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYXUATChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    #endregion
		
		public XUATKHO()
		{
			this._NGUYENLIEU = default(EntityRef<NGUYENLIEU>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANL", DbType="NChar(10)")]
		public string MANL
		{
			get
			{
				return this._MANL;
			}
			set
			{
				if ((this._MANL != value))
				{
					if (this._NGUYENLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANLChanging(value);
					this.SendPropertyChanging();
					this._MANL = value;
					this.SendPropertyChanged("MANL");
					this.OnMANLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int NOT NULL")]
		public int SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYXUAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYXUAT
		{
			get
			{
				return this._NGAYXUAT;
			}
			set
			{
				if ((this._NGAYXUAT != value))
				{
					this.OnNGAYXUATChanging(value);
					this.SendPropertyChanging();
					this._NGAYXUAT = value;
					this.SendPropertyChanged("NGAYXUAT");
					this.OnNGAYXUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_XUATKHO", Storage="_NGUYENLIEU", ThisKey="MANL", OtherKey="MANL", IsForeignKey=true)]
		public NGUYENLIEU NGUYENLIEU
		{
			get
			{
				return this._NGUYENLIEU.Entity;
			}
			set
			{
				NGUYENLIEU previousValue = this._NGUYENLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NGUYENLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUYENLIEU.Entity = null;
						previousValue.XUATKHOs.Remove(this);
					}
					this._NGUYENLIEU.Entity = value;
					if ((value != null))
					{
						value.XUATKHOs.Add(this);
						this._MANL = value.MANL;
					}
					else
					{
						this._MANL = default(string);
					}
					this.SendPropertyChanged("NGUYENLIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_XUATKHO", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.XUATKHOs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.XUATKHOs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDATBAN")]
	public partial class CHITIETDATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MADATBAN;
		
		private string _MAMON;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<DATBAN> _DATBAN;
		
		private EntityRef<MONAN> _MONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMADATBANChanging(string value);
    partial void OnMADATBANChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETDATBAN()
		{
			this._DATBAN = default(EntityRef<DATBAN>);
			this._MONAN = default(EntityRef<MONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATBAN", DbType="NChar(10)")]
		public string MADATBAN
		{
			get
			{
				return this._MADATBAN;
			}
			set
			{
				if ((this._MADATBAN != value))
				{
					if (this._DATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADATBANChanging(value);
					this.SendPropertyChanging();
					this._MADATBAN = value;
					this.SendPropertyChanged("MADATBAN");
					this.OnMADATBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NChar(10)")]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATBAN_CHITIETDATBAN", Storage="_DATBAN", ThisKey="MADATBAN", OtherKey="MADATBAN", IsForeignKey=true)]
		public DATBAN DATBAN
		{
			get
			{
				return this._DATBAN.Entity;
			}
			set
			{
				DATBAN previousValue = this._DATBAN.Entity;
				if (((previousValue != value) 
							|| (this._DATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATBAN.Entity = null;
						previousValue.CHITIETDATBANs.Remove(this);
					}
					this._DATBAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATBANs.Add(this);
						this._MADATBAN = value.MADATBAN;
					}
					else
					{
						this._MADATBAN = default(string);
					}
					this.SendPropertyChanged("DATBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CHITIETDATBAN", Storage="_MONAN", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.CHITIETDATBANs.Remove(this);
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATBANs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETGOIMON")]
	public partial class CHITIETGOIMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MAGOIMON;
		
		private string _MAMON;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<GOIMON> _GOIMON;
		
		private EntityRef<MONAN> _MONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMAGOIMONChanging(string value);
    partial void OnMAGOIMONChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETGOIMON()
		{
			this._GOIMON = default(EntityRef<GOIMON>);
			this._MONAN = default(EntityRef<MONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGOIMON", DbType="NChar(10)")]
		public string MAGOIMON
		{
			get
			{
				return this._MAGOIMON;
			}
			set
			{
				if ((this._MAGOIMON != value))
				{
					if (this._GOIMON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGOIMONChanging(value);
					this.SendPropertyChanging();
					this._MAGOIMON = value;
					this.SendPropertyChanged("MAGOIMON");
					this.OnMAGOIMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NChar(10)")]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GOIMON_CHITIETGOIMON", Storage="_GOIMON", ThisKey="MAGOIMON", OtherKey="MAGOIMON", IsForeignKey=true)]
		public GOIMON GOIMON
		{
			get
			{
				return this._GOIMON.Entity;
			}
			set
			{
				GOIMON previousValue = this._GOIMON.Entity;
				if (((previousValue != value) 
							|| (this._GOIMON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GOIMON.Entity = null;
						previousValue.CHITIETGOIMONs.Remove(this);
					}
					this._GOIMON.Entity = value;
					if ((value != null))
					{
						value.CHITIETGOIMONs.Add(this);
						this._MAGOIMON = value.MAGOIMON;
					}
					else
					{
						this._MAGOIMON = default(string);
					}
					this.SendPropertyChanged("GOIMON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CHITIETGOIMON", Storage="_MONAN", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.CHITIETGOIMONs.Remove(this);
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETGOIMONs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATBAN")]
	public partial class DATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADATBAN;
		
		private string _MANV;
		
		private string _MAKH;
		
		private System.Nullable<System.DateTime> _THOIGIANLAPDAT;
		
		private System.Nullable<System.DateTime> _THOIGIANDAT;
		
		private string _MABAN;
		
		private string _BUOI;
		
		private System.Nullable<int> _TINHTRANG;
		
		private EntitySet<CHITIETDATBAN> _CHITIETDATBANs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<BAN> _BAN;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADATBANChanging(string value);
    partial void OnMADATBANChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTHOIGIANLAPDATChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANLAPDATChanged();
    partial void OnTHOIGIANDATChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANDATChanged();
    partial void OnMABANChanging(string value);
    partial void OnMABANChanged();
    partial void OnBUOIChanging(string value);
    partial void OnBUOIChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public DATBAN()
		{
			this._CHITIETDATBANs = new EntitySet<CHITIETDATBAN>(new Action<CHITIETDATBAN>(this.attach_CHITIETDATBANs), new Action<CHITIETDATBAN>(this.detach_CHITIETDATBANs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._BAN = default(EntityRef<BAN>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATBAN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADATBAN
		{
			get
			{
				return this._MADATBAN;
			}
			set
			{
				if ((this._MADATBAN != value))
				{
					this.OnMADATBANChanging(value);
					this.SendPropertyChanging();
					this._MADATBAN = value;
					this.SendPropertyChanged("MADATBAN");
					this.OnMADATBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="NChar(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANLAPDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> THOIGIANLAPDAT
		{
			get
			{
				return this._THOIGIANLAPDAT;
			}
			set
			{
				if ((this._THOIGIANLAPDAT != value))
				{
					this.OnTHOIGIANLAPDATChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANLAPDAT = value;
					this.SendPropertyChanged("THOIGIANLAPDAT");
					this.OnTHOIGIANLAPDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> THOIGIANDAT
		{
			get
			{
				return this._THOIGIANDAT;
			}
			set
			{
				if ((this._THOIGIANDAT != value))
				{
					this.OnTHOIGIANDATChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANDAT = value;
					this.SendPropertyChanged("THOIGIANDAT");
					this.OnTHOIGIANDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAN", DbType="NChar(10)")]
		public string MABAN
		{
			get
			{
				return this._MABAN;
			}
			set
			{
				if ((this._MABAN != value))
				{
					if (this._BAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABANChanging(value);
					this.SendPropertyChanging();
					this._MABAN = value;
					this.SendPropertyChanged("MABAN");
					this.OnMABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOI", DbType="NVarChar(500)")]
		public string BUOI
		{
			get
			{
				return this._BUOI;
			}
			set
			{
				if ((this._BUOI != value))
				{
					this.OnBUOIChanging(value);
					this.SendPropertyChanging();
					this._BUOI = value;
					this.SendPropertyChanged("BUOI");
					this.OnBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATBAN_CHITIETDATBAN", Storage="_CHITIETDATBANs", ThisKey="MADATBAN", OtherKey="MADATBAN")]
		public EntitySet<CHITIETDATBAN> CHITIETDATBANs
		{
			get
			{
				return this._CHITIETDATBANs;
			}
			set
			{
				this._CHITIETDATBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATBAN_HOADON", Storage="_HOADONs", ThisKey="MADATBAN", OtherKey="MADATBAN")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_DATBAN", Storage="_BAN", ThisKey="MABAN", OtherKey="MABAN", IsForeignKey=true)]
		public BAN BAN
		{
			get
			{
				return this._BAN.Entity;
			}
			set
			{
				BAN previousValue = this._BAN.Entity;
				if (((previousValue != value) 
							|| (this._BAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAN.Entity = null;
						previousValue.DATBANs.Remove(this);
					}
					this._BAN.Entity = value;
					if ((value != null))
					{
						value.DATBANs.Add(this);
						this._MABAN = value.MABAN;
					}
					else
					{
						this._MABAN = default(string);
					}
					this.SendPropertyChanged("BAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATBAN", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DATBANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DATBANs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DATBAN", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.DATBANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.DATBANs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATBANs(CHITIETDATBAN entity)
		{
			this.SendPropertyChanging();
			entity.DATBAN = this;
		}
		
		private void detach_CHITIETDATBANs(CHITIETDATBAN entity)
		{
			this.SendPropertyChanging();
			entity.DATBAN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DATBAN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DATBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GOIMON")]
	public partial class GOIMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGOIMON;
		
		private string _MANV;
		
		private string _MABAN;
		
		private System.Nullable<System.DateTime> _THOIGIANGOI;
		
		private System.Nullable<int> _TINHTRANG;
		
		private EntitySet<CHITIETGOIMON> _CHITIETGOIMONs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<BAN> _BAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGOIMONChanging(string value);
    partial void OnMAGOIMONChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMABANChanging(string value);
    partial void OnMABANChanged();
    partial void OnTHOIGIANGOIChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANGOIChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public GOIMON()
		{
			this._CHITIETGOIMONs = new EntitySet<CHITIETGOIMON>(new Action<CHITIETGOIMON>(this.attach_CHITIETGOIMONs), new Action<CHITIETGOIMON>(this.detach_CHITIETGOIMONs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._BAN = default(EntityRef<BAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGOIMON", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGOIMON
		{
			get
			{
				return this._MAGOIMON;
			}
			set
			{
				if ((this._MAGOIMON != value))
				{
					this.OnMAGOIMONChanging(value);
					this.SendPropertyChanging();
					this._MAGOIMON = value;
					this.SendPropertyChanged("MAGOIMON");
					this.OnMAGOIMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAN", DbType="NChar(10)")]
		public string MABAN
		{
			get
			{
				return this._MABAN;
			}
			set
			{
				if ((this._MABAN != value))
				{
					if (this._BAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABANChanging(value);
					this.SendPropertyChanging();
					this._MABAN = value;
					this.SendPropertyChanged("MABAN");
					this.OnMABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANGOI", DbType="DateTime")]
		public System.Nullable<System.DateTime> THOIGIANGOI
		{
			get
			{
				return this._THOIGIANGOI;
			}
			set
			{
				if ((this._THOIGIANGOI != value))
				{
					this.OnTHOIGIANGOIChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANGOI = value;
					this.SendPropertyChanged("THOIGIANGOI");
					this.OnTHOIGIANGOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GOIMON_CHITIETGOIMON", Storage="_CHITIETGOIMONs", ThisKey="MAGOIMON", OtherKey="MAGOIMON")]
		public EntitySet<CHITIETGOIMON> CHITIETGOIMONs
		{
			get
			{
				return this._CHITIETGOIMONs;
			}
			set
			{
				this._CHITIETGOIMONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GOIMON_HOADON", Storage="_HOADONs", ThisKey="MAGOIMON", OtherKey="MAGOIMON")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_GOIMON", Storage="_BAN", ThisKey="MABAN", OtherKey="MABAN", IsForeignKey=true)]
		public BAN BAN
		{
			get
			{
				return this._BAN.Entity;
			}
			set
			{
				BAN previousValue = this._BAN.Entity;
				if (((previousValue != value) 
							|| (this._BAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAN.Entity = null;
						previousValue.GOIMONs.Remove(this);
					}
					this._BAN.Entity = value;
					if ((value != null))
					{
						value.GOIMONs.Add(this);
						this._MABAN = value.MABAN;
					}
					else
					{
						this._MABAN = default(string);
					}
					this.SendPropertyChanged("BAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_GOIMON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.GOIMONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.GOIMONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.GOIMON = this;
		}
		
		private void detach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.GOIMON = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.GOIMON = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.GOIMON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHOADON;
		
		private string _MANV;
		
		private string _MAKH;
		
		private string _MAGOIMON;
		
		private System.Nullable<int> _TONGTIEN;
		
		private string _PHUONGTHUCTHANHTOAN;
		
		private System.Nullable<System.DateTime> _THOIGIAN;
		
		private string _MADATBAN;
		
		private EntityRef<DATBAN> _DATBAN;
		
		private EntityRef<GOIMON> _GOIMON;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOADONChanging(string value);
    partial void OnMAHOADONChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMAGOIMONChanging(string value);
    partial void OnMAGOIMONChanged();
    partial void OnTONGTIENChanging(System.Nullable<int> value);
    partial void OnTONGTIENChanged();
    partial void OnPHUONGTHUCTHANHTOANChanging(string value);
    partial void OnPHUONGTHUCTHANHTOANChanged();
    partial void OnTHOIGIANChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANChanged();
    partial void OnMADATBANChanging(string value);
    partial void OnMADATBANChanged();
    #endregion
		
		public HOADON()
		{
			this._DATBAN = default(EntityRef<DATBAN>);
			this._GOIMON = default(EntityRef<GOIMON>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOADON", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHOADON
		{
			get
			{
				return this._MAHOADON;
			}
			set
			{
				if ((this._MAHOADON != value))
				{
					this.OnMAHOADONChanging(value);
					this.SendPropertyChanging();
					this._MAHOADON = value;
					this.SendPropertyChanged("MAHOADON");
					this.OnMAHOADONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="NChar(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGOIMON", DbType="NChar(10)")]
		public string MAGOIMON
		{
			get
			{
				return this._MAGOIMON;
			}
			set
			{
				if ((this._MAGOIMON != value))
				{
					if (this._GOIMON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGOIMONChanging(value);
					this.SendPropertyChanging();
					this._MAGOIMON = value;
					this.SendPropertyChanged("MAGOIMON");
					this.OnMAGOIMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int")]
		public System.Nullable<int> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONGTHUCTHANHTOAN", DbType="NVarChar(500)")]
		public string PHUONGTHUCTHANHTOAN
		{
			get
			{
				return this._PHUONGTHUCTHANHTOAN;
			}
			set
			{
				if ((this._PHUONGTHUCTHANHTOAN != value))
				{
					this.OnPHUONGTHUCTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._PHUONGTHUCTHANHTOAN = value;
					this.SendPropertyChanged("PHUONGTHUCTHANHTOAN");
					this.OnPHUONGTHUCTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> THOIGIAN
		{
			get
			{
				return this._THOIGIAN;
			}
			set
			{
				if ((this._THOIGIAN != value))
				{
					this.OnTHOIGIANChanging(value);
					this.SendPropertyChanging();
					this._THOIGIAN = value;
					this.SendPropertyChanged("THOIGIAN");
					this.OnTHOIGIANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATBAN", DbType="NChar(10)")]
		public string MADATBAN
		{
			get
			{
				return this._MADATBAN;
			}
			set
			{
				if ((this._MADATBAN != value))
				{
					if (this._DATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADATBANChanging(value);
					this.SendPropertyChanging();
					this._MADATBAN = value;
					this.SendPropertyChanged("MADATBAN");
					this.OnMADATBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATBAN_HOADON", Storage="_DATBAN", ThisKey="MADATBAN", OtherKey="MADATBAN", IsForeignKey=true)]
		public DATBAN DATBAN
		{
			get
			{
				return this._DATBAN.Entity;
			}
			set
			{
				DATBAN previousValue = this._DATBAN.Entity;
				if (((previousValue != value) 
							|| (this._DATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATBAN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._DATBAN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MADATBAN = value.MADATBAN;
					}
					else
					{
						this._MADATBAN = default(string);
					}
					this.SendPropertyChanged("DATBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GOIMON_HOADON", Storage="_GOIMON", ThisKey="MAGOIMON", OtherKey="MAGOIMON", IsForeignKey=true)]
		public GOIMON GOIMON
		{
			get
			{
				return this._GOIMON.Entity;
			}
			set
			{
				GOIMON previousValue = this._GOIMON.Entity;
				if (((previousValue != value) 
							|| (this._GOIMON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GOIMON.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._GOIMON.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAGOIMON = value.MAGOIMON;
					}
					else
					{
						this._MAGOIMON = default(string);
					}
					this.SendPropertyChanged("GOIMON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GIOITINH;
		
		private System.Nullable<int> _DIEM;
		
		private EntitySet<DATBAN> _DATBANs;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIEMChanging(System.Nullable<int> value);
    partial void OnDIEMChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DATBANs = new EntitySet<DATBAN>(new Action<DATBAN>(this.attach_DATBANs), new Action<DATBAN>(this.detach_DATBANs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(500)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(50)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEM", DbType="Int")]
		public System.Nullable<int> DIEM
		{
			get
			{
				return this._DIEM;
			}
			set
			{
				if ((this._DIEM != value))
				{
					this.OnDIEMChanging(value);
					this.SendPropertyChanging();
					this._DIEM = value;
					this.SendPropertyChanged("DIEM");
					this.OnDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATBAN", Storage="_DATBANs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DATBAN> DATBANs
		{
			get
			{
				return this._DATBANs;
			}
			set
			{
				this._DATBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATBANs(DATBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DATBANs(DATBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONAN")]
	public partial class MONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _TENMON;
		
		private System.Nullable<int> _GIA;
		
		private EntitySet<CHITIETDATBAN> _CHITIETDATBANs;
		
		private EntitySet<CHITIETGOIMON> _CHITIETGOIMONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnTENMONChanging(string value);
    partial void OnTENMONChanged();
    partial void OnGIAChanging(System.Nullable<int> value);
    partial void OnGIAChanged();
    #endregion
		
		public MONAN()
		{
			this._CHITIETDATBANs = new EntitySet<CHITIETDATBAN>(new Action<CHITIETDATBAN>(this.attach_CHITIETDATBANs), new Action<CHITIETDATBAN>(this.detach_CHITIETDATBANs));
			this._CHITIETGOIMONs = new EntitySet<CHITIETGOIMON>(new Action<CHITIETGOIMON>(this.attach_CHITIETGOIMONs), new Action<CHITIETGOIMON>(this.detach_CHITIETGOIMONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMON", DbType="NVarChar(500)")]
		public string TENMON
		{
			get
			{
				return this._TENMON;
			}
			set
			{
				if ((this._TENMON != value))
				{
					this.OnTENMONChanging(value);
					this.SendPropertyChanging();
					this._TENMON = value;
					this.SendPropertyChanged("TENMON");
					this.OnTENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Int")]
		public System.Nullable<int> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CHITIETDATBAN", Storage="_CHITIETDATBANs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<CHITIETDATBAN> CHITIETDATBANs
		{
			get
			{
				return this._CHITIETDATBANs;
			}
			set
			{
				this._CHITIETDATBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CHITIETGOIMON", Storage="_CHITIETGOIMONs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<CHITIETGOIMON> CHITIETGOIMONs
		{
			get
			{
				return this._CHITIETGOIMONs;
			}
			set
			{
				this._CHITIETGOIMONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATBANs(CHITIETDATBAN entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = this;
		}
		
		private void detach_CHITIETDATBANs(CHITIETDATBAN entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = null;
		}
		
		private void attach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = this;
		}
		
		private void detach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUYENLIEU")]
	public partial class NGUYENLIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANL;
		
		private string _TENNL;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _DVT;
		
		private EntitySet<XUATKHO> _XUATKHOs;
		
		private EntitySet<NHAPKHO> _NHAPKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANLChanging(string value);
    partial void OnMANLChanged();
    partial void OnTENNLChanging(string value);
    partial void OnTENNLChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    #endregion
		
		public NGUYENLIEU()
		{
			this._XUATKHOs = new EntitySet<XUATKHO>(new Action<XUATKHO>(this.attach_XUATKHOs), new Action<XUATKHO>(this.detach_XUATKHOs));
			this._NHAPKHOs = new EntitySet<NHAPKHO>(new Action<NHAPKHO>(this.attach_NHAPKHOs), new Action<NHAPKHO>(this.detach_NHAPKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANL", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANL
		{
			get
			{
				return this._MANL;
			}
			set
			{
				if ((this._MANL != value))
				{
					this.OnMANLChanging(value);
					this.SendPropertyChanging();
					this._MANL = value;
					this.SendPropertyChanged("MANL");
					this.OnMANLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNL", DbType="NVarChar(500)")]
		public string TENNL
		{
			get
			{
				return this._TENNL;
			}
			set
			{
				if ((this._TENNL != value))
				{
					this.OnTENNLChanging(value);
					this.SendPropertyChanging();
					this._TENNL = value;
					this.SendPropertyChanged("TENNL");
					this.OnTENNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(50)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_XUATKHO", Storage="_XUATKHOs", ThisKey="MANL", OtherKey="MANL")]
		public EntitySet<XUATKHO> XUATKHOs
		{
			get
			{
				return this._XUATKHOs;
			}
			set
			{
				this._XUATKHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_NHAPKHO", Storage="_NHAPKHOs", ThisKey="MANL", OtherKey="MANL")]
		public EntitySet<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this._NHAPKHOs;
			}
			set
			{
				this._NHAPKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XUATKHOs(XUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = this;
		}
		
		private void detach_XUATKHOs(XUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = null;
		}
		
		private void attach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = this;
		}
		
		private void detach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENHANVIEN;
		
		private System.Nullable<int> _CMND;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GIOITINH;
		
		private string _CHUCVU;
		
		private string _MATKHAU;
		
		private string _DIACHI;
		
		private EntitySet<XUATKHO> _XUATKHOs;
		
		private EntitySet<DATBAN> _DATBANs;
		
		private EntitySet<GOIMON> _GOIMONs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<NHAPKHO> _NHAPKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENHANVIENChanging(string value);
    partial void OnTENHANVIENChanged();
    partial void OnCMNDChanging(System.Nullable<int> value);
    partial void OnCMNDChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._XUATKHOs = new EntitySet<XUATKHO>(new Action<XUATKHO>(this.attach_XUATKHOs), new Action<XUATKHO>(this.detach_XUATKHOs));
			this._DATBANs = new EntitySet<DATBAN>(new Action<DATBAN>(this.attach_DATBANs), new Action<DATBAN>(this.detach_DATBANs));
			this._GOIMONs = new EntitySet<GOIMON>(new Action<GOIMON>(this.attach_GOIMONs), new Action<GOIMON>(this.detach_GOIMONs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._NHAPKHOs = new EntitySet<NHAPKHO>(new Action<NHAPKHO>(this.attach_NHAPKHOs), new Action<NHAPKHO>(this.detach_NHAPKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANVIEN", DbType="NVarChar(500)")]
		public string TENHANVIEN
		{
			get
			{
				return this._TENHANVIEN;
			}
			set
			{
				if ((this._TENHANVIEN != value))
				{
					this.OnTENHANVIENChanging(value);
					this.SendPropertyChanging();
					this._TENHANVIEN = value;
					this.SendPropertyChanged("TENHANVIEN");
					this.OnTENHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int")]
		public System.Nullable<int> CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(50)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="NVarChar(50)")]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(500)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_XUATKHO", Storage="_XUATKHOs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<XUATKHO> XUATKHOs
		{
			get
			{
				return this._XUATKHOs;
			}
			set
			{
				this._XUATKHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DATBAN", Storage="_DATBANs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<DATBAN> DATBANs
		{
			get
			{
				return this._DATBANs;
			}
			set
			{
				this._DATBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_GOIMON", Storage="_GOIMONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<GOIMON> GOIMONs
		{
			get
			{
				return this._GOIMONs;
			}
			set
			{
				this._GOIMONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHAPKHO", Storage="_NHAPKHOs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this._NHAPKHOs;
			}
			set
			{
				this._NHAPKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XUATKHOs(XUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_XUATKHOs(XUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_DATBANs(DATBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_DATBANs(DATBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_GOIMONs(GOIMON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_GOIMONs(GOIMON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAPKHO")]
	public partial class NHAPKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MANL;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _NHACUNGCAP;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<int> _NGAYHETHAN;
		
		private string _MANV;
		
		private EntityRef<NGUYENLIEU> _NGUYENLIEU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMANLChanging(string value);
    partial void OnMANLChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnNHACUNGCAPChanging(string value);
    partial void OnNHACUNGCAPChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnNGAYHETHANChanging(System.Nullable<int> value);
    partial void OnNGAYHETHANChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    #endregion
		
		public NHAPKHO()
		{
			this._NGUYENLIEU = default(EntityRef<NGUYENLIEU>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANL", DbType="NChar(10)")]
		public string MANL
		{
			get
			{
				return this._MANL;
			}
			set
			{
				if ((this._MANL != value))
				{
					if (this._NGUYENLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANLChanging(value);
					this.SendPropertyChanging();
					this._MANL = value;
					this.SendPropertyChanged("MANL");
					this.OnMANLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHACUNGCAP", DbType="NVarChar(500)")]
		public string NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP;
			}
			set
			{
				if ((this._NHACUNGCAP != value))
				{
					this.OnNHACUNGCAPChanging(value);
					this.SendPropertyChanging();
					this._NHACUNGCAP = value;
					this.SendPropertyChanged("NHACUNGCAP");
					this.OnNHACUNGCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYHETHAN", DbType="Int")]
		public System.Nullable<int> NGAYHETHAN
		{
			get
			{
				return this._NGAYHETHAN;
			}
			set
			{
				if ((this._NGAYHETHAN != value))
				{
					this.OnNGAYHETHANChanging(value);
					this.SendPropertyChanging();
					this._NGAYHETHAN = value;
					this.SendPropertyChanged("NGAYHETHAN");
					this.OnNGAYHETHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_NHAPKHO", Storage="_NGUYENLIEU", ThisKey="MANL", OtherKey="MANL", IsForeignKey=true)]
		public NGUYENLIEU NGUYENLIEU
		{
			get
			{
				return this._NGUYENLIEU.Entity;
			}
			set
			{
				NGUYENLIEU previousValue = this._NGUYENLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NGUYENLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUYENLIEU.Entity = null;
						previousValue.NHAPKHOs.Remove(this);
					}
					this._NGUYENLIEU.Entity = value;
					if ((value != null))
					{
						value.NHAPKHOs.Add(this);
						this._MANL = value.MANL;
					}
					else
					{
						this._MANL = default(string);
					}
					this.SendPropertyChanged("NGUYENLIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHAPKHO", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NHAPKHOs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NHAPKHOs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class loadNLResult
	{
		
		private string _MANL;
		
		private string _TENNL;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _DVT;
		
		public loadNLResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANL", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MANL
		{
			get
			{
				return this._MANL;
			}
			set
			{
				if ((this._MANL != value))
				{
					this._MANL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNL", DbType="NVarChar(500)")]
		public string TENNL
		{
			get
			{
				return this._TENNL;
			}
			set
			{
				if ((this._TENNL != value))
				{
					this._TENNL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this._SOLUONG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(50)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this._DVT = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
